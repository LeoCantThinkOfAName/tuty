{"version":3,"file":"PostBody-19ca90db.js","sources":["../../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../../src/components/Post/PostBody.tsx"],"sourcesContent":["import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","import { Box, Button, CardBody } from \"@chakra-ui/react\";\nimport { FC, useState } from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface PostBodyProps {\n  content: string;\n}\n\nexport const PostBody: FC<PostBodyProps> = ({ content }) => {\n  const { t } = useTranslation();\n  const [fold, setFold] = useState(true);\n  const foldPost = () => setFold(!fold);\n\n  return (\n    <CardBody>\n      <Box maxH={fold ? \"48\" : \"100%\"} overflow=\"hidden\">\n        {content}\n      </Box>\n      <Button size=\"xs\" borderRadius=\"full\" mt=\"3\" px=\"3\" onClick={foldPost}>\n        {fold ? t(\"post.unfold\") : t(\"post.fold\")}\n      </Button>\n    </CardBody>\n  );\n};\n"],"names":["CardBody","forwardRef","props","ref","className","rest","styles","useCardStyles","jsx","chakra","cx","Box","Square","size","centerContent","Circle","PostBody","content","t","useTranslation","fold","setFold","useState","foldPost","jsxs","Button"],"mappings":"wSAQA,IAAIA,EAAWC,EAAW,SAAmBC,EAAOC,EAAK,CACvD,KAAM,CAAE,UAAAC,EAAW,GAAGC,CAAI,EAAKH,EACzBI,EAASC,IACf,OAAuBC,EAAG,IACxBC,EAAO,IACP,CACE,IAAAN,EACA,UAAWO,EAAG,oBAAqBN,CAAS,EAC5C,MAAOE,EAAO,KACd,GAAGD,CACJ,CACL,CACA,CAAC,ECdGM,EAAMF,EAAO,KAAK,EACtBE,EAAI,YAAc,MAClB,IAAIC,EAASX,EAAW,SAAiBC,EAAOC,EAAK,CACnD,KAAM,CAAE,KAAAU,EAAM,cAAAC,EAAgB,GAAM,GAAGT,CAAM,EAAGH,EAC1CI,EAASQ,EAAgB,CAAE,QAAS,OAAQ,WAAY,SAAU,eAAgB,QAAU,EAAG,GACrG,OAAuBN,EAAG,IACxBG,EACA,CACE,IAAAR,EACA,QAASU,EACT,MAAO,CACL,GAAGP,EACH,WAAY,EACZ,SAAU,CACX,EACD,GAAGD,CACJ,CACL,CACA,CAAC,EACDO,EAAO,YAAc,SACrB,IAAIG,EAASd,EAAW,SAAiBC,EAAOC,EAAK,CACnD,KAAM,CAAE,KAAAU,EAAM,GAAGR,CAAI,EAAKH,EAC1B,OAAuBM,EAAG,IAACI,EAAQ,CAAE,KAAAC,EAAM,IAAAV,EAAK,aAAc,SAAU,GAAGE,CAAI,CAAE,CACnF,CAAC,EACDU,EAAO,YAAc,SCrBd,MAAAC,EAAA,CAAA,CAAA,QAAAC,KAAA,CACL,KAAA,CAAA,EAAAC,GAAAC,IACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,IAAAF,EAAA,CAAAD,CAAA,EAEA,OAAAI,EAAA,KAAAxB,EAAA,CAAA,SAAA,CAEIQ,EAAAA,IAAAG,EAAA,CAAA,KAAAS,EAAA,KAAA,OAAA,SAAA,SAAA,SAAAH,CAAA,CAAA,EAEAT,MAAAiB,EAAA,CAAA,KAAA,KAAA,aAAA,OAAA,GAAA,IAAA,GAAA,IAAA,QAAAF,EAAA,SAAAL,EAAAE,EAAA,cAAA,WAAA,EAAA,CAGA,CAAA,CAAA,CAGN","x_google_ignoreList":[0,1]}