{"version":3,"file":"PostBody-bd589f07.js","sources":["../../node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","../../src/components/Post/PostBody.tsx"],"sourcesContent":["'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","import { BaseUnit, MaximumArticleHeight } from \"../../constants\";\nimport { Box, Button, CardBody } from \"@chakra-ui/react\";\nimport { FC, useLayoutEffect, useRef, useState } from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface PostBodyProps {\n  content: string;\n  forceHide?: boolean;\n}\n\nexport const PostBody: FC<PostBodyProps> = ({ content, forceHide }) => {\n  const { t } = useTranslation();\n  const articleRef = useRef<HTMLDivElement | null>(null);\n  const [fold, setFold] = useState(false);\n  const [foldable, setFoldable] = useState(false);\n  const foldPost = () => setFold(!fold);\n\n  useLayoutEffect(() => {\n    const article = articleRef.current;\n    const articleHeight = article?.offsetHeight;\n    if ((articleHeight ?? 0) > MaximumArticleHeight * BaseUnit || forceHide) {\n      setFoldable(true);\n      setFold(true);\n    }\n  }, []);\n\n  return (\n    <CardBody>\n      <Box\n        ref={articleRef}\n        maxH={fold ? MaximumArticleHeight : \"100%\"}\n        overflow=\"hidden\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n      {foldable && (\n        <Button size=\"xs\" borderRadius=\"full\" mt=\"3\" px=\"3\" onClick={foldPost}>\n          {fold ? t(\"post.unfold\") : t(\"post.fold\")}\n        </Button>\n      )}\n    </CardBody>\n  );\n};\n"],"names":["CardBody","forwardRef","props","ref","className","rest","styles","useCardStyles","jsx","chakra","cx","PostBody","content","forceHide","useTranslation","articleRef","useRef","fold","setFold","useState","foldable","setFoldable","foldPost","useLayoutEffect","article","MaximumArticleHeight","BaseUnit","jsxs","Box","Button"],"mappings":"yaASA,IAAIA,EAAWC,EAAW,SAAmBC,EAAOC,EAAK,CACvD,KAAM,CAAE,UAAAC,EAAW,GAAGC,CAAI,EAAKH,EACzBI,EAASC,IACf,OAAuBC,EAAG,IACxBC,EAAO,IACP,CACE,IAAAN,EACA,UAAWO,EAAG,oBAAqBN,CAAS,EAC5C,MAAOE,EAAO,KACd,GAAGD,CACJ,CACL,CACA,CAAC,ECVM,MAAAM,EAAA,CAAA,CAAA,QAAAC,EAAA,UAAAC,KAAA,CACL,KAAA,CAAA,GAAAC,IACAC,EAAAC,SAAA,IAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACAG,EAAA,IAAAJ,EAAA,CAAAD,CAAA,EAEAM,OAAAA,EAAAA,gBAAA,IAAA,CACE,MAAAC,EAAAT,EAAA,WACAS,GAAA,YAAAA,EAAA,eACA,GAAAC,EAAAC,GAAAb,KACEQ,EAAA,EAAA,EACAH,EAAA,EAAA,EACF,EAAA,CAAA,CAAA,EAGFS,EAAA,KAAA3B,EAAA,CAAA,SAAA,CAEIQ,EAAA,IAAAoB,EAAC,CAAA,IAAAb,EACM,KAAAE,EAAAQ,EAAA,OAC+B,SAAA,SAC3B,wBAAA,CAAA,OAAAb,CAAA,CACkC,CAAA,EAC7CQ,GAAAZ,EAAAA,IAAAqB,EAAA,CAAA,KAAA,KAAA,aAAA,OAAA,GAAA,IAAA,GAAA,IAAA,QAAAP,EAAA,SAAA,EAAAL,EAAA,cAAA,WAAA,EAAA,CAIE,CAAA,CAAA,CAIR","x_google_ignoreList":[0]}