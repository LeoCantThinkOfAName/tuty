{"version":3,"file":"PostBody-c8cec187.js","sources":["../../node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","../../src/components/Post/InfoBlock.tsx","../../src/components/Post/PostBody.tsx"],"sourcesContent":["'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","import { Box, Text } from \"@chakra-ui/react\";\n\nimport { FC } from \"react\";\nimport { Post as PostType } from \"../../services/usePosts\";\nimport { useLocale } from \"../../hooks/useLocale\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface InfoProps {\n  title: string;\n  content: string;\n}\n\ninterface InfoBlockProps\n  extends Pick<\n    PostType,\n    \"objective\" | \"subject\" | \"location\" | \"rate\" | \"rateType\"\n  > {}\n\nconst Info: FC<InfoProps> = ({ title, content }) => (\n  <Box display=\"flex items-center\">\n    <Text fontWeight=\"bold\" textTransform=\"uppercase\" mr=\"2\" children={title} />\n    <Text children={content} />\n  </Box>\n);\n\nexport const InfoBlock: FC<InfoBlockProps> = ({\n  location,\n  objective,\n  rate,\n  rateType,\n  subject,\n}) => {\n  const { t } = useTranslation();\n  const { locale } = useLocale();\n  const intl = new Intl.DisplayNames(locale, { type: \"dateTimeField\" });\n\n  return (\n    <Box mb=\"2\">\n      {objective && (\n        <Info title={t(\"post.infoBlock.objective\")} content={objective} />\n      )}\n      {subject && (\n        <Info title={t(\"post.infoBlock.subject\")} content={subject} />\n      )}\n      {location && (\n        <Info title={t(\"post.infoBlock.location\")} content={location} />\n      )}\n      {rate && (\n        <Box display=\"flex items-center\">\n          <Info title={t(\"post.infoBlock.rate\")} content={rate.toString()} />\n          <Text children=\"/\" mx=\"1\" />\n          <Text children={intl.of(rateType as string)} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import { BaseUnit, MaximumArticleHeight } from \"../../constants\";\nimport { Box, Button, CardBody } from \"@chakra-ui/react\";\nimport { FC, useLayoutEffect, useRef, useState } from \"react\";\n\nimport { InfoBlock } from \"./InfoBlock\";\nimport { Post as PostType } from \"../../services/usePosts\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface PostBodyProps {\n  post: PostType;\n  forceHide?: boolean;\n}\n\nexport const PostBody: FC<PostBodyProps> = ({ post, forceHide }) => {\n  const { t } = useTranslation();\n  const articleRef = useRef<HTMLDivElement | null>(null);\n  const [fold, setFold] = useState(false);\n  const [foldable, setFoldable] = useState(false);\n  const foldPost = () => setFold(!fold);\n  const { content, objective, subject, location, rate, rateType } = post;\n\n  useLayoutEffect(() => {\n    const article = articleRef.current;\n    const articleHeight = article?.offsetHeight;\n    if ((articleHeight ?? 0) > MaximumArticleHeight * BaseUnit || forceHide) {\n      setFoldable(true);\n      setFold(true);\n    }\n  }, []);\n\n  return (\n    <CardBody>\n      <InfoBlock\n        subject={subject}\n        objective={objective}\n        location={location}\n        rate={rate}\n        rateType={rateType}\n      />\n      <Box\n        ref={articleRef}\n        maxH={fold ? MaximumArticleHeight : \"100%\"}\n        overflow=\"hidden\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n      {foldable && (\n        <Button size=\"xs\" borderRadius=\"full\" mt=\"3\" px=\"3\" onClick={foldPost}>\n          {fold ? t(\"post.unfold\") : t(\"post.fold\")}\n        </Button>\n      )}\n    </CardBody>\n  );\n};\n"],"names":["CardBody","forwardRef","props","ref","className","rest","styles","useCardStyles","jsx","chakra","cx","Info","title","content","jsxs","Box","Text","InfoBlock","location","objective","rate","rateType","subject","t","useTranslation","locale","useLocale","intl","PostBody","post","forceHide","articleRef","useRef","fold","setFold","useState","foldable","setFoldable","foldPost","useLayoutEffect","article","MaximumArticleHeight","BaseUnit","Button"],"mappings":"sgBASA,IAAIA,EAAWC,EAAW,SAAmBC,EAAOC,EAAK,CACvD,KAAM,CAAE,UAAAC,EAAW,GAAGC,CAAI,EAAKH,EACzBI,EAASC,IACf,OAAuBC,EAAG,IACxBC,EAAO,IACP,CACE,IAAAN,EACA,UAAWO,EAAG,oBAAqBN,CAAS,EAC5C,MAAOE,EAAO,KACd,GAAGD,CACJ,CACL,CACA,CAAC,ECHD,MAAAM,EAAA,CAAA,CAAA,MAAAC,EAAA,QAAAC,CAAA,IAAAC,OAAAC,EAAA,CAAA,QAAA,oBAAA,SAAA,CAEIP,EAAAA,IAAAQ,EAAA,CAAA,WAAA,OAAA,cAAA,YAAA,GAAA,IAAA,SAAAJ,CAAA,CAAA,EAA0EJ,EAAAA,IAAAQ,EAAA,CAAA,SAAAH,CAAA,CAAA,CACjD,CAAA,CAAA,EAItBI,EAAA,CAAA,CAAuC,SAAAC,EAC5C,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,CAEF,IAAA,CACE,KAAA,CAAA,EAAAC,GAAAC,IACA,CAAA,OAAAC,GAAAC,IACAC,EAAA,IAAA,KAAA,aAAAF,EAAA,CAAA,KAAA,eAAA,CAAA,EAEA,OAAAX,EAAA,KAAAC,EAAA,CAAA,GAAA,IAAA,SAAA,CAEKI,GAAAX,EAAAA,IAAAG,EAAA,CAAA,MAAAY,EAAA,0BAAA,EAAA,QAAAJ,EAAA,EACiEG,GAAAd,EAAAA,IAAAG,EAAA,CAAA,MAAAY,EAAA,wBAAA,EAAA,QAAAD,EAAA,EAGJJ,GAAAV,EAAAA,IAAAG,EAAA,CAAA,MAAAY,EAAA,yBAAA,EAAA,QAAAL,EAAA,EAGEE,GAAAN,EAAA,KAAAC,EAAA,CAAA,QAAA,oBAAA,SAAA,CAI5DP,MAAAG,EAAA,CAAA,MAAAY,EAAA,qBAAA,EAAA,QAAAH,EAAA,SAAA,EAAA,EAAiEZ,EAAA,IAAAQ,EAAA,CAAA,SAAA,IAAA,GAAA,IAAA,EACvCR,EAAA,IAAAQ,EAAA,CAAA,SAAAW,EAAA,GAAAN,CAAA,EAAA,CACmB,EAAA,CAC/C,CAAA,CAAA,CAIR,ymBC3CO,MAAAO,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KAAA,CACL,KAAA,CAAA,EAAAP,GAAAC,IACAO,EAAAC,SAAA,IAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACAG,EAAA,IAAAJ,EAAA,CAAAD,CAAA,EACA,CAAA,QAAApB,EAAA,UAAAM,EAAA,QAAAG,EAAA,SAAAJ,EAAA,KAAAE,EAAA,SAAAC,CAAA,EAAAQ,EAEAU,OAAAA,EAAAA,gBAAA,IAAA,CACE,MAAAC,EAAAT,EAAA,WACAS,GAAA,YAAAA,EAAA,eACA,GAAAC,EAAAC,GAAAZ,KACEO,EAAA,EAAA,EACAH,EAAA,EAAA,EACF,EAAA,CAAA,CAAA,EAGFpB,EAAA,KAAAd,EAAA,CAAA,SAAA,CAEIQ,EAAA,IAAAS,EAAC,CAAA,QAAAK,EACC,UAAAH,EACA,SAAAD,EACA,KAAAE,EACA,SAAAC,CACA,CAAA,EACFb,EAAA,IACAO,EAAC,CAAA,IAAAgB,EACM,KAAAE,EAAAQ,EAAA,OAC+B,SAAA,SAC3B,wBAAA,CAAA,OAAA5B,CAAA,CACkC,CAAA,EAC7CuB,GAAA5B,EAAAA,IAAAmC,EAAA,CAAA,KAAA,KAAA,aAAA,OAAA,GAAA,IAAA,GAAA,IAAA,QAAAL,EAAA,SAAAf,EAAAU,EAAA,cAAA,WAAA,EAAA,CAIE,CAAA,CAAA,CAIR","x_google_ignoreList":[0]}