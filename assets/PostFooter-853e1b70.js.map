{"version":3,"file":"PostFooter-853e1b70.js","sources":["../../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","../../node_modules/@chakra-ui/textarea/dist/chunk-OEQDSMWZ.mjs","../../src/components/Post/ActionButton.tsx","../../src/components/Post/CommentSection.tsx","../../src/components/Post/PostFooter.tsx"],"sourcesContent":["import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n","import { Button, ButtonProps } from \"@chakra-ui/react\";\n\nimport { FC } from \"react\";\nimport { IconType } from \"react-icons\";\n\ninterface ActionButtonProps extends ButtonProps {\n  icon: IconType;\n}\n\nexport const ActionButton: FC<ActionButtonProps> = ({\n  title,\n  icon,\n  ...props\n}) => {\n  return (\n    <Button\n      variant=\"unstyled\"\n      display=\"flex\"\n      alignItems=\"center\"\n      mr=\"3\"\n      leftIcon={icon({})}\n      opacity=\"0.5\"\n      color=\"gray.500\"\n      _dark={{\n        color: \"gray.300\",\n      }}\n      _hover={{\n        opacity: 1,\n      }}\n      title={title}\n      {...props}\n    >\n      {title}\n    </Button>\n  );\n};\n","import { Button, Flex, Textarea } from \"@chakra-ui/react\";\n\nimport { FC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CommentSectionProps {\n  onCancel: () => void;\n  onSubmit: (data: typeof defaultValues) => unknown;\n}\n\nconst defaultValues = {\n  comment: \"\",\n};\n\nexport const CommentSection: FC<CommentSectionProps> = ({\n  onCancel,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const { register, handleSubmit } = useForm({\n    defaultValues,\n  });\n\n  return (\n    <Flex\n      w=\"100%\"\n      flexDir=\"column\"\n      as=\"form\"\n      onSubmit={(event) => void handleSubmit(onSubmit)(event)}\n    >\n      <Textarea\n        w=\"100%\"\n        minH=\"36\"\n        placeholder={t(\"post.commentSection.placeholder\")}\n        {...register(\"comment\", {\n          required: true,\n        })}\n      />\n      <Flex mt=\"3\" justifyContent=\"end\">\n        <Button mr=\"3\" variant=\"ghost\" onClick={onCancel}>\n          {t(\"post.commentSection.cancel\")}\n        </Button>\n        <Button variant=\"success\" type=\"submit\">\n          {t(\"post.commentSection.submit\")}\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n","import {\n  BsFillBookmarkPlusFill,\n  BsFillChatSquareDotsFill,\n  BsFillHeartFill,\n  BsFillSendFill,\n} from \"react-icons/bs\";\nimport { CardFooter, Flex, Tag, TagLabel } from \"@chakra-ui/react\";\nimport { FC, useCallback, useState } from \"react\";\n\nimport { ActionButton } from \"./ActionButton\";\nimport { CommentSection } from \"./CommentSection\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface PostFooterProps {\n  tags?: string[];\n}\n\nexport const PostFooter: FC<PostFooterProps> = ({ tags }) => {\n  const { t } = useTranslation();\n  const [showCommentSection, setShowCommentSection] = useState(false);\n\n  const toggleCommentSection = useCallback(\n    () => setShowCommentSection((prev) => !prev),\n    [],\n  );\n\n  return (\n    <CardFooter flexDir=\"column\">\n      <Flex>\n        {tags?.map((tag) => (\n          <Tag\n            borderRadius=\"full\"\n            variant=\"outline\"\n            mr=\"2\"\n            cursor=\"default\"\n            title={tag}\n            key={tag}\n          >\n            <TagLabel>{tag}</TagLabel>\n          </Tag>\n        ))}\n      </Flex>\n      <Flex mt=\"3\" flexWrap=\"wrap\">\n        <ActionButton title={t(\"post.actions.like\")} icon={BsFillHeartFill} />\n        <ActionButton\n          title={t(\"post.actions.bookmark\")}\n          icon={BsFillBookmarkPlusFill}\n        />\n        <ActionButton title={t(\"post.actions.share\")} icon={BsFillSendFill} />\n        <ActionButton\n          title={t(\"post.actions.comment\")}\n          icon={BsFillChatSquareDotsFill}\n          onClick={toggleCommentSection}\n        />\n      </Flex>\n      {showCommentSection && (\n        <CommentSection onSubmit={() => {}} onCancel={toggleCommentSection} />\n      )}\n    </CardFooter>\n  );\n};\n\nPostFooter.defaultProps = {\n  tags: [\"Tag 1\", \"Tag 2\"],\n};\n"],"names":["CardFooter","forwardRef","props","ref","className","justify","rest","styles","useCardStyles","jsx","chakra","cx","omit","object","keysToOmit","clone","key","omitted","Textarea","useStyleConfig","rows","omitThemingProps","textareaProps","useFormControl","textareaStyles","ActionButton","title","icon","Button","defaultValues","CommentSection","onCancel","onSubmit","t","useTranslation","register","handleSubmit","useForm","jsxs","Flex","event","PostFooter","tags","showCommentSection","setShowCommentSection","useState","toggleCommentSection","useCallback","prev","tag","Tag","TagLabel","BsFillHeartFill","BsFillBookmarkPlusFill","BsFillSendFill","BsFillChatSquareDotsFill"],"mappings":"mhBAWA,IAAIA,EAAaC,EACf,SAAqBC,EAAOC,EAAK,CAC/B,KAAM,CAAE,UAAAC,EAAW,QAAAC,EAAS,GAAGC,CAAI,EAAKJ,EAClCK,EAASC,IACf,OAAuBC,EAAG,IACxBC,EAAO,IACP,CACE,IAAAP,EACA,UAAWQ,EAAG,sBAAuBP,CAAS,EAC9C,MAAO,CACL,QAAS,OACT,eAAgBC,EAChB,GAAGE,EAAO,MACX,EACD,GAAGD,CACJ,CACP,CACG,CACH,EClBA,SAASM,EAAKC,EAAQC,EAAa,GAAI,CACrC,MAAMC,EAAQ,OAAO,OAAO,CAAE,EAAEF,CAAM,EACtC,UAAWG,KAAOF,EACZE,KAAOD,GACT,OAAOA,EAAMC,CAAG,EAGpB,OAAOD,CACT,CAIA,IAAIE,EAAU,CAAC,IAAK,OAAQ,SAAU,WAAW,EAC7CC,EAAWjB,EAAW,CAACC,EAAOC,IAAQ,CACxC,MAAMI,EAASY,EAAe,WAAYjB,CAAK,EACzC,CAAE,UAAAE,EAAW,KAAAgB,EAAM,GAAGd,CAAI,EAAKe,EAAiBnB,CAAK,EACrDoB,EAAgBC,EAAejB,CAAI,EACnCkB,EAAiBJ,EAAOR,EAAKL,EAAQU,CAAO,EAAIV,EACtD,OAAuBE,EAAG,IACxBC,EAAO,SACP,CACE,IAAAP,EACA,KAAAiB,EACA,GAAGE,EACH,UAAWX,EAAG,kBAAmBP,CAAS,EAC1C,MAAOoB,CACR,CACL,CACA,CAAC,EACDN,EAAS,YAAc,WC/BhB,MAAAO,EAAA,CAAA,CAA6C,MAAAC,EAClD,KAAAC,EACA,GAAAzB,CAEF,IACEO,EAAA,IACEmB,EAAC,CAAA,QAAA,WACS,QAAA,OACA,WAAA,SACG,GAAA,IACR,SAAAD,EAAA,EAAA,EACc,QAAA,MACT,MAAA,WACF,MAAA,CACC,MAAA,UACE,EACT,OAAA,CACQ,QAAA,CACG,EACX,MAAAD,EACA,GAAAxB,EACI,SAAAwB,CAEH,CAAA,m4YCrBP,MAAAG,EAAA,CAAsB,QAAA,EAEtB,EAEOC,EAAA,CAAA,CAAiD,SAAAC,EACtD,SAAAC,CAEF,IAAA,CACE,KAAA,CAAA,EAAAC,GAAAC,IACA,CAAA,SAAAC,EAAA,aAAAC,CAAA,EAAAC,EAAA,CAA2C,cAAAR,CACzC,CAAA,EAGF,OAAAS,EAAA,KACEC,EAAC,CAAA,EAAA,OACG,QAAA,SACM,GAAA,OACL,SAAAC,GAAA,KAAAJ,EAAAJ,CAAA,EAAAQ,CAAA,EACmD,SAAA,CAEtD/B,EAAA,IAAAS,EAAC,CAAA,EAAA,OACG,KAAA,KACG,YAAAe,EAAA,iCAAA,EAC2C,GAAAE,EAAA,UAAA,CACxB,SAAA,EACZ,CAAA,CACX,CAAA,EACHG,EAAA,KAAAC,EAAA,CAAA,GAAA,IAAA,eAAA,MAAA,SAAA,CAEE9B,EAAAA,IAAAmB,EAAA,CAAA,GAAA,IAAA,QAAA,QAAA,QAAAG,EAAA,SAAAE,EAAA,4BAAA,CAAA,CAAA,EAEAxB,EAAAA,IAAAmB,EAAA,CAAA,QAAA,UAAA,KAAA,SAAA,SAAAK,EAAA,4BAAA,EAAA,CAGA,EAAA,CACF,CAAA,CAAA,CAGN,gVChCO,MAAAQ,EAAA,CAAA,CAAA,KAAAC,KAAA,CACL,KAAA,CAAA,EAAAT,GAAAC,IACA,CAAAS,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAAC,EAAA,YAA6B,IAAAH,EAAAI,GAAA,CAAAA,CAAA,EACgB,CAAA,CAC1C,EAGH,OAAAV,EAAA,KAAAtC,EAAA,CAAA,QAAA,SAAA,SAAA,CAEIS,EAAA,IAAA8B,EAAA,CAAA,SAAAG,GAAA,YAAAA,EAAA,IAAAO,GAAAxC,EAAA,IAEIyC,EAAC,CAAA,aAAA,OACc,QAAA,UACL,GAAA,IACL,OAAA,UACI,MAAAD,EACA,SAAAxC,EAAAA,IAAA0C,EAAA,CAAA,SAAAF,CAAA,CAAA,CAGQ,EAAAA,CAFV,GAAA,EAKXX,EAAA,KAAAC,EAAA,CAAA,GAAA,IAAA,SAAA,OAAA,SAAA,CAEE9B,MAAAgB,EAAA,CAAA,MAAAQ,EAAA,mBAAA,EAAA,KAAAmB,EAAA,EAAoE3C,EAAA,IACpEgB,EAAC,CAAA,MAAAQ,EAAA,uBAAA,EACiC,KAAAoB,CAC1B,CAAA,EACR5C,MAAAgB,EAAA,CAAA,MAAAQ,EAAA,oBAAA,EAAA,KAAAqB,EAAA,EACoE7C,EAAA,IACpEgB,EAAC,CAAA,MAAAQ,EAAA,sBAAA,EACgC,KAAAsB,EACzB,QAAAT,CACG,CAAA,CACX,EAAA,EACFH,GAAAlC,EAAA,IAAAqB,EAAA,CAAA,SAAA,IAAA,CAEkC,EAAA,SAAAgB,EAAA,CAAoC,CAAA,CAAA,CAI5E,EAEAL,EAAA,aAAA,CAA0B,KAAA,CAAA,QAAA,OAAA,CAE1B","x_google_ignoreList":[0,1]}