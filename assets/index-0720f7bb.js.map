{"version":3,"file":"index-0720f7bb.js","sources":["../../node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","../../src/components/Post/InfoBlock.tsx","../../src/components/Post/PostBody.tsx","../../src/components/Post/index.tsx"],"sourcesContent":["'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","import { Box, Text } from \"@chakra-ui/react\";\n\nimport { FC } from \"react\";\nimport { Post as PostType } from \"../../services/usePosts\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface InfoProps {\n  title: string;\n  content: string;\n}\n\ninterface InfoBlockProps extends Partial<PostType> {}\n\nconst Info: FC<InfoProps> = ({ title, content }) => (\n  <Box display=\"flex items-center\">\n    <Text fontWeight=\"bold\" textTransform=\"uppercase\" mr=\"2\" children={title} />\n    <Text children={content} />\n  </Box>\n);\n\nexport const InfoBlock: FC<InfoBlockProps> = ({\n  location,\n  objective,\n  rate,\n  rateType,\n  subject,\n  currency,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Box mb=\"2\">\n      {objective && (\n        <Info title={t(\"post.infoBlock.objective\")} content={objective} />\n      )}\n      {subject && (\n        <Info title={t(\"post.infoBlock.subject\")} content={subject} />\n      )}\n      {location && (\n        <Info title={t(\"post.infoBlock.location\")} content={location} />\n      )}\n      {rate && rateType && (\n        <Box display=\"flex items-center\">\n          <Info\n            title={t(\"post.infoBlock.rate\")}\n            content={t(`post.infoBlock.${rateType.toLowerCase()}`, {\n              rate,\n              currency: t(`currencies.${currency?.name.toLowerCase()}`),\n            })}\n          />\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import { BaseUnit, MaximumArticleHeight } from \"../../constants\";\nimport { Box, Button, CardBody } from \"@chakra-ui/react\";\nimport { FC, useLayoutEffect, useRef, useState } from \"react\";\n\nimport { InfoBlock } from \"./InfoBlock\";\nimport { Post as PostType } from \"../../services/usePosts\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface PostBodyProps {\n  post: PostType;\n  forceHide?: boolean;\n}\n\nexport const PostBody: FC<PostBodyProps> = ({ post, forceHide }) => {\n  const { t } = useTranslation();\n  const articleRef = useRef<HTMLDivElement | null>(null);\n  const [fold, setFold] = useState(false);\n  const [foldable, setFoldable] = useState(false);\n  const foldPost = () => setFold(!fold);\n  const { content, objective, subject, location, rate, rateType, currency } =\n    post;\n\n  useLayoutEffect(() => {\n    const article = articleRef.current;\n    const articleHeight = article?.offsetHeight;\n    if ((articleHeight ?? 0) > MaximumArticleHeight * BaseUnit || forceHide) {\n      setFoldable(true);\n      setFold(true);\n    }\n  }, []);\n\n  return (\n    <CardBody>\n      <InfoBlock\n        subject={subject}\n        objective={objective}\n        location={location}\n        rate={rate}\n        rateType={rateType}\n        currency={currency}\n      />\n      <Box\n        ref={articleRef}\n        maxH={fold ? MaximumArticleHeight : \"100%\"}\n        overflow=\"hidden\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n      {foldable && (\n        <Button size=\"xs\" borderRadius=\"full\" mt=\"3\" px=\"3\" onClick={foldPost}>\n          {fold ? t(\"post.unfold\") : t(\"post.fold\")}\n        </Button>\n      )}\n    </CardBody>\n  );\n};\n","import { Card } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { PostBody } from \"./PostBody\";\nimport { PostFooter } from \"./PostFooter\";\nimport { PostHeader } from \"./PostHeader\";\nimport { Post as PostType } from \"../../services/usePosts\";\n\ninterface PostProps {\n  data: PostType;\n}\n\nexport const Post: FC<PostProps> = ({ data }) => {\n  return (\n    <Card role=\"article\" mb=\"5\" boxShadow=\"md\">\n      <PostHeader\n        userName={data.author!.name}\n        jobTitle={data.author!.title ?? \"\"}\n        category={data.category!.name}\n        date={new Date(data.createdAt)}\n      />\n      <PostBody post={data} />\n      <PostFooter tags={data.tags ?? []} />\n    </Card>\n  );\n};\n"],"names":["CardBody","forwardRef","props","ref","className","rest","styles","useCardStyles","jsx","chakra","cx","Info","title","content","jsxs","Box","Text","InfoBlock","location","objective","rate","rateType","subject","currency","t","useTranslation","PostBody","post","forceHide","articleRef","useRef","fold","setFold","useState","foldable","setFoldable","foldPost","useLayoutEffect","article","MaximumArticleHeight","BaseUnit","Button","Post","data","Card","PostHeader","PostFooter"],"mappings":"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","x_google_ignoreList":[0]}